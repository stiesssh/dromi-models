/**
 */
package de.unistuttgart.ma.saga.impl;

import de.unistuttgart.gropius.Component;
import de.unistuttgart.gropius.Interface;
import de.unistuttgart.gropius.gropiusPackage;
import de.unistuttgart.ma.saga.ComponentAdapter;
import de.unistuttgart.ma.saga.ElementWithId;
import de.unistuttgart.ma.saga.SagaPackage;
import gropius.slo.SloRule;
import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.EObjectResolvingEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Component Adapter</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link de.unistuttgart.ma.saga.impl.ComponentAdapterImpl#getSloRules <em>Slo Rules</em>}</li>
 *   <li>{@link de.unistuttgart.ma.saga.impl.ComponentAdapterImpl#getProvidedInterfaces <em>Provided Interfaces</em>}</li>
 *   <li>{@link de.unistuttgart.ma.saga.impl.ComponentAdapterImpl#getConsumedInterfaces <em>Consumed Interfaces</em>}</li>
 *   <li>{@link de.unistuttgart.ma.saga.impl.ComponentAdapterImpl#getName <em>Name</em>}</li>
 *   <li>{@link de.unistuttgart.ma.saga.impl.ComponentAdapterImpl#getId <em>Id</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ComponentAdapterImpl extends MinimalEObjectImpl.Container implements ComponentAdapter {
	/**
	 * The cached value of the '{@link #getSloRules() <em>Slo Rules</em>}' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getSloRules()
	 * @generated
	 * @ordered
	 */
	protected EList<SloRule> sloRules;

	/**
	 * The cached value of the '{@link #getProvidedInterfaces() <em>Provided Interfaces</em>}' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getProvidedInterfaces()
	 * @generated
	 * @ordered
	 */
	protected EList<Interface> providedInterfaces;

	/**
	 * The cached value of the '{@link #getConsumedInterfaces() <em>Consumed Interfaces</em>}' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getConsumedInterfaces()
	 * @generated
	 * @ordered
	 */
	protected EList<Interface> consumedInterfaces;

	/**
	 * The default value of the '{@link #getName() <em>Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getName()
	 * @generated
	 * @ordered
	 */
	protected static final String NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getName()
	 * @generated
	 * @ordered
	 */
	protected String name = NAME_EDEFAULT;

	/**
	 * The default value of the '{@link #getId() <em>Id</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getId()
	 * @generated
	 * @ordered
	 */
	protected static final String ID_EDEFAULT = null;

	/**
	 * The cached value of the '{@link #getId() <em>Id</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getId()
	 * @generated
	 * @ordered
	 */
	protected String id = ID_EDEFAULT;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComponentAdapterImpl() {
		super();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	protected EClass eStaticClass() {
		return SagaPackage.Literals.COMPONENT_ADAPTER;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EList<SloRule> getSloRules() {
		if (sloRules == null) {
			sloRules = new EObjectContainmentEList<SloRule>(SloRule.class, this, SagaPackage.COMPONENT_ADAPTER__SLO_RULES);
		}
		return sloRules;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EList<Interface> getProvidedInterfaces() {
		if (providedInterfaces == null) {
			providedInterfaces = new EObjectContainmentEList<Interface>(Interface.class, this, SagaPackage.COMPONENT_ADAPTER__PROVIDED_INTERFACES);
		}
		return providedInterfaces;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EList<Interface> getConsumedInterfaces() {
		if (consumedInterfaces == null) {
			consumedInterfaces = new EObjectResolvingEList<Interface>(Interface.class, this, SagaPackage.COMPONENT_ADAPTER__CONSUMED_INTERFACES);
		}
		return consumedInterfaces;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public String getName() {
		return name;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setName(String newName) {
		String oldName = name;
		name = newName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, SagaPackage.COMPONENT_ADAPTER__NAME, oldName, name));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public String getId() {
		return id;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setId(String newId) {
		String oldId = id;
		id = newId;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, SagaPackage.COMPONENT_ADAPTER__ID, oldId, id));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
		switch (featureID) {
			case SagaPackage.COMPONENT_ADAPTER__SLO_RULES:
				return ((InternalEList<?>)getSloRules()).basicRemove(otherEnd, msgs);
			case SagaPackage.COMPONENT_ADAPTER__PROVIDED_INTERFACES:
				return ((InternalEList<?>)getProvidedInterfaces()).basicRemove(otherEnd, msgs);
		}
		return super.eInverseRemove(otherEnd, featureID, msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object eGet(int featureID, boolean resolve, boolean coreType) {
		switch (featureID) {
			case SagaPackage.COMPONENT_ADAPTER__SLO_RULES:
				return getSloRules();
			case SagaPackage.COMPONENT_ADAPTER__PROVIDED_INTERFACES:
				return getProvidedInterfaces();
			case SagaPackage.COMPONENT_ADAPTER__CONSUMED_INTERFACES:
				return getConsumedInterfaces();
			case SagaPackage.COMPONENT_ADAPTER__NAME:
				return getName();
			case SagaPackage.COMPONENT_ADAPTER__ID:
				return getId();
		}
		return super.eGet(featureID, resolve, coreType);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@SuppressWarnings("unchecked")
	@Override
	public void eSet(int featureID, Object newValue) {
		switch (featureID) {
			case SagaPackage.COMPONENT_ADAPTER__SLO_RULES:
				getSloRules().clear();
				getSloRules().addAll((Collection<? extends SloRule>)newValue);
				return;
			case SagaPackage.COMPONENT_ADAPTER__PROVIDED_INTERFACES:
				getProvidedInterfaces().clear();
				getProvidedInterfaces().addAll((Collection<? extends Interface>)newValue);
				return;
			case SagaPackage.COMPONENT_ADAPTER__CONSUMED_INTERFACES:
				getConsumedInterfaces().clear();
				getConsumedInterfaces().addAll((Collection<? extends Interface>)newValue);
				return;
			case SagaPackage.COMPONENT_ADAPTER__NAME:
				setName((String)newValue);
				return;
			case SagaPackage.COMPONENT_ADAPTER__ID:
				setId((String)newValue);
				return;
		}
		super.eSet(featureID, newValue);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void eUnset(int featureID) {
		switch (featureID) {
			case SagaPackage.COMPONENT_ADAPTER__SLO_RULES:
				getSloRules().clear();
				return;
			case SagaPackage.COMPONENT_ADAPTER__PROVIDED_INTERFACES:
				getProvidedInterfaces().clear();
				return;
			case SagaPackage.COMPONENT_ADAPTER__CONSUMED_INTERFACES:
				getConsumedInterfaces().clear();
				return;
			case SagaPackage.COMPONENT_ADAPTER__NAME:
				setName(NAME_EDEFAULT);
				return;
			case SagaPackage.COMPONENT_ADAPTER__ID:
				setId(ID_EDEFAULT);
				return;
		}
		super.eUnset(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean eIsSet(int featureID) {
		switch (featureID) {
			case SagaPackage.COMPONENT_ADAPTER__SLO_RULES:
				return sloRules != null && !sloRules.isEmpty();
			case SagaPackage.COMPONENT_ADAPTER__PROVIDED_INTERFACES:
				return providedInterfaces != null && !providedInterfaces.isEmpty();
			case SagaPackage.COMPONENT_ADAPTER__CONSUMED_INTERFACES:
				return consumedInterfaces != null && !consumedInterfaces.isEmpty();
			case SagaPackage.COMPONENT_ADAPTER__NAME:
				return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
			case SagaPackage.COMPONENT_ADAPTER__ID:
				return ID_EDEFAULT == null ? id != null : !ID_EDEFAULT.equals(id);
		}
		return super.eIsSet(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public int eBaseStructuralFeatureID(int derivedFeatureID, Class<?> baseClass) {
		if (baseClass == Component.class) {
			switch (derivedFeatureID) {
				case SagaPackage.COMPONENT_ADAPTER__PROVIDED_INTERFACES: return gropiusPackage.COMPONENT__PROVIDED_INTERFACES;
				case SagaPackage.COMPONENT_ADAPTER__CONSUMED_INTERFACES: return gropiusPackage.COMPONENT__CONSUMED_INTERFACES;
				case SagaPackage.COMPONENT_ADAPTER__NAME: return gropiusPackage.COMPONENT__NAME;
				default: return -1;
			}
		}
		if (baseClass == ElementWithId.class) {
			switch (derivedFeatureID) {
				case SagaPackage.COMPONENT_ADAPTER__ID: return SagaPackage.ELEMENT_WITH_ID__ID;
				default: return -1;
			}
		}
		return super.eBaseStructuralFeatureID(derivedFeatureID, baseClass);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public int eDerivedStructuralFeatureID(int baseFeatureID, Class<?> baseClass) {
		if (baseClass == Component.class) {
			switch (baseFeatureID) {
				case gropiusPackage.COMPONENT__PROVIDED_INTERFACES: return SagaPackage.COMPONENT_ADAPTER__PROVIDED_INTERFACES;
				case gropiusPackage.COMPONENT__CONSUMED_INTERFACES: return SagaPackage.COMPONENT_ADAPTER__CONSUMED_INTERFACES;
				case gropiusPackage.COMPONENT__NAME: return SagaPackage.COMPONENT_ADAPTER__NAME;
				default: return -1;
			}
		}
		if (baseClass == ElementWithId.class) {
			switch (baseFeatureID) {
				case SagaPackage.ELEMENT_WITH_ID__ID: return SagaPackage.COMPONENT_ADAPTER__ID;
				default: return -1;
			}
		}
		return super.eDerivedStructuralFeatureID(baseFeatureID, baseClass);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public String toString() {
		if (eIsProxy()) return super.toString();

		StringBuilder result = new StringBuilder(super.toString());
		result.append(" (name: ");
		result.append(name);
		result.append(", id: ");
		result.append(id);
		result.append(')');
		return result.toString();
	}

} //ComponentAdapterImpl
