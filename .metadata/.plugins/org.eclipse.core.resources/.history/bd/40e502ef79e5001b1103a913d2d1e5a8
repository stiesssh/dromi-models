/**
 */
package uni.stuttgart.saga.impl;

import gropius.CCIMSMetamodel.CrossComponentIssueManagementSystem;

import java.util.Collection;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import uni.stuttgart.saga.Project;
import uni.stuttgart.saga.Saga;
import uni.stuttgart.saga.SagaPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Project</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link uni.stuttgart.saga.impl.ProjectImpl#getSagas <em>Sagas</em>}</li>
 *   <li>{@link uni.stuttgart.saga.impl.ProjectImpl#getProcesses <em>Processes</em>}</li>
 *   <li>{@link uni.stuttgart.saga.impl.ProjectImpl#getProject <em>Project</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ProjectImpl extends MinimalEObjectImpl.Container implements Project {
	/**
	 * The cached value of the '{@link #getSagas() <em>Sagas</em>}' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getSagas()
	 * @generated
	 * @ordered
	 */
	protected EList<Saga> sagas;

	/**
	 * The cached value of the '{@link #getProcesses() <em>Processes</em>}' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getProcesses()
	 * @generated
	 * @ordered
	 */
	protected EList<org.eclipse.bpmn2.bpmn2.Process> processes;

	/**
	 * The cached value of the '{@link #getProject() <em>Project</em>}' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getProject()
	 * @generated
	 * @ordered
	 */
	protected EList<CrossComponentIssueManagementSystem> project;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProjectImpl() {
		super();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	protected EClass eStaticClass() {
		return SagaPackage.Literals.PROJECT;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EList<Saga> getSagas() {
		if (sagas == null) {
			sagas = new EObjectContainmentEList<Saga>(Saga.class, this, SagaPackage.PROJECT__SAGAS);
		}
		return sagas;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EList<org.eclipse.bpmn2.bpmn2.Process> getProcesses() {
		if (processes == null) {
			processes = new EObjectContainmentEList<org.eclipse.bpmn2.bpmn2.Process>(org.eclipse.bpmn2.bpmn2.Process.class, this, SagaPackage.PROJECT__PROCESSES);
		}
		return processes;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EList<CrossComponentIssueManagementSystem> getProject() {
		if (project == null) {
			project = new EObjectContainmentEList<CrossComponentIssueManagementSystem>(CrossComponentIssueManagementSystem.class, this, SagaPackage.PROJECT__PROJECT);
		}
		return project;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
		switch (featureID) {
			case SagaPackage.PROJECT__SAGAS:
				return ((InternalEList<?>)getSagas()).basicRemove(otherEnd, msgs);
			case SagaPackage.PROJECT__PROCESSES:
				return ((InternalEList<?>)getProcesses()).basicRemove(otherEnd, msgs);
			case SagaPackage.PROJECT__PROJECT:
				return ((InternalEList<?>)getProject()).basicRemove(otherEnd, msgs);
		}
		return super.eInverseRemove(otherEnd, featureID, msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object eGet(int featureID, boolean resolve, boolean coreType) {
		switch (featureID) {
			case SagaPackage.PROJECT__SAGAS:
				return getSagas();
			case SagaPackage.PROJECT__PROCESSES:
				return getProcesses();
			case SagaPackage.PROJECT__PROJECT:
				return getProject();
		}
		return super.eGet(featureID, resolve, coreType);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@SuppressWarnings("unchecked")
	@Override
	public void eSet(int featureID, Object newValue) {
		switch (featureID) {
			case SagaPackage.PROJECT__SAGAS:
				getSagas().clear();
				getSagas().addAll((Collection<? extends Saga>)newValue);
				return;
			case SagaPackage.PROJECT__PROCESSES:
				getProcesses().clear();
				getProcesses().addAll((Collection<? extends org.eclipse.bpmn2.bpmn2.Process>)newValue);
				return;
			case SagaPackage.PROJECT__PROJECT:
				getProject().clear();
				getProject().addAll((Collection<? extends CrossComponentIssueManagementSystem>)newValue);
				return;
		}
		super.eSet(featureID, newValue);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void eUnset(int featureID) {
		switch (featureID) {
			case SagaPackage.PROJECT__SAGAS:
				getSagas().clear();
				return;
			case SagaPackage.PROJECT__PROCESSES:
				getProcesses().clear();
				return;
			case SagaPackage.PROJECT__PROJECT:
				getProject().clear();
				return;
		}
		super.eUnset(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean eIsSet(int featureID) {
		switch (featureID) {
			case SagaPackage.PROJECT__SAGAS:
				return sagas != null && !sagas.isEmpty();
			case SagaPackage.PROJECT__PROCESSES:
				return processes != null && !processes.isEmpty();
			case SagaPackage.PROJECT__PROJECT:
				return project != null && !project.isEmpty();
		}
		return super.eIsSet(featureID);
	}

} //ProjectImpl
