/**
 */
package de.unistuttgart.ma.saga.util;

import bpmn2.BaseElement;
import bpmn2.FlowElement;
import bpmn2.FlowNode;
import de.unistuttgart.ma.saga.Activity;
import de.unistuttgart.ma.saga.AvailabilitySlo;
import de.unistuttgart.ma.saga.BPMNConnect;
import de.unistuttgart.ma.saga.ChainLink;
import de.unistuttgart.ma.saga.Component;
import de.unistuttgart.ma.saga.ComponentInterface;
import de.unistuttgart.ma.saga.ElementWithSLO;
import de.unistuttgart.ma.saga.Impact;
import de.unistuttgart.ma.saga.NamedElement;
import de.unistuttgart.ma.saga.Notification;
import de.unistuttgart.ma.saga.Part;
import de.unistuttgart.ma.saga.Project;
import de.unistuttgart.ma.saga.ResponseTimeSlo;
import de.unistuttgart.ma.saga.Saga;
import de.unistuttgart.ma.saga.SagaPackage;
import de.unistuttgart.ma.saga.SagaStep;
import de.unistuttgart.ma.saga.Slo;
import de.unistuttgart.ma.saga.Violation;
import de.unistuttgart.ma.saga.Whole;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.util.Switch;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @see de.unistuttgart.ma.saga.SagaPackage
 * @generated
 */
public class SagaSwitch<T> extends Switch<T> {
	/**
	 * The cached model package
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected static SagaPackage modelPackage;

	/**
	 * Creates an instance of the switch.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public SagaSwitch() {
		if (modelPackage == null) {
			modelPackage = SagaPackage.eINSTANCE;
		}
	}

	/**
	 * Checks whether this is a switch for the given package.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param ePackage the package in question.
	 * @return whether this is a switch for the given package.
	 * @generated
	 */
	@Override
	protected boolean isSwitchFor(EPackage ePackage) {
		return ePackage == modelPackage;
	}

	/**
	 * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the first non-null result returned by a <code>caseXXX</code> call.
	 * @generated
	 */
	@Override
	protected T doSwitch(int classifierID, EObject theEObject) {
		switch (classifierID) {
		case SagaPackage.PROJECT: {
			Project project = (Project) theEObject;
			T result = caseProject(project);
			if (result == null)
				result = caseNamedElement(project);
			if (result == null)
				result = defaultCase(theEObject);
			return result;
		}
		case SagaPackage.COMPONENT: {
			Component component = (Component) theEObject;
			T result = caseComponent(component);
			if (result == null)
				result = caseWhole(component);
			if (result == null)
				result = caseElementWithSLO(component);
			if (result == null)
				result = caseNamedElement(component);
			if (result == null)
				result = defaultCase(theEObject);
			return result;
		}
		case SagaPackage.COMPONENT_INTERFACE: {
			ComponentInterface componentInterface = (ComponentInterface) theEObject;
			T result = caseComponentInterface(componentInterface);
			if (result == null)
				result = casePart(componentInterface);
			if (result == null)
				result = caseElementWithSLO(componentInterface);
			if (result == null)
				result = caseNamedElement(componentInterface);
			if (result == null)
				result = defaultCase(theEObject);
			return result;
		}
		case SagaPackage.NAMED_ELEMENT: {
			NamedElement namedElement = (NamedElement) theEObject;
			T result = caseNamedElement(namedElement);
			if (result == null)
				result = defaultCase(theEObject);
			return result;
		}
		case SagaPackage.SAGA: {
			Saga saga = (Saga) theEObject;
			T result = caseSaga(saga);
			if (result == null)
				result = caseWhole(saga);
			if (result == null)
				result = caseElementWithSLO(saga);
			if (result == null)
				result = caseNamedElement(saga);
			if (result == null)
				result = defaultCase(theEObject);
			return result;
		}
		case SagaPackage.SAGA_STEP: {
			SagaStep sagaStep = (SagaStep) theEObject;
			T result = caseSagaStep(sagaStep);
			if (result == null)
				result = casePart(sagaStep);
			if (result == null)
				result = caseElementWithSLO(sagaStep);
			if (result == null)
				result = caseNamedElement(sagaStep);
			if (result == null)
				result = defaultCase(theEObject);
			return result;
		}
		case SagaPackage.PROCESS: {
			de.unistuttgart.ma.saga.Process process = (de.unistuttgart.ma.saga.Process) theEObject;
			T result = caseProcess(process);
			if (result == null)
				result = caseWhole(process);
			if (result == null)
				result = caseElementWithSLO(process);
			if (result == null)
				result = caseNamedElement(process);
			if (result == null)
				result = defaultCase(theEObject);
			return result;
		}
		case SagaPackage.ACTIVITY: {
			Activity activity = (Activity) theEObject;
			T result = caseActivity(activity);
			if (result == null)
				result = casePart(activity);
			if (result == null)
				result = caseElementWithSLO(activity);
			if (result == null)
				result = caseNamedElement(activity);
			if (result == null)
				result = defaultCase(theEObject);
			return result;
		}
		case SagaPackage.SLO: {
			Slo slo = (Slo) theEObject;
			T result = caseSlo(slo);
			if (result == null)
				result = defaultCase(theEObject);
			return result;
		}
		case SagaPackage.ELEMENT_WITH_SLO: {
			ElementWithSLO elementWithSLO = (ElementWithSLO) theEObject;
			T result = caseElementWithSLO(elementWithSLO);
			if (result == null)
				result = caseNamedElement(elementWithSLO);
			if (result == null)
				result = defaultCase(theEObject);
			return result;
		}
		case SagaPackage.VIOLATION: {
			Violation violation = (Violation) theEObject;
			T result = caseViolation(violation);
			if (result == null)
				result = caseChainLink(violation);
			if (result == null)
				result = defaultCase(theEObject);
			return result;
		}
		case SagaPackage.IMPACT: {
			Impact impact = (Impact) theEObject;
			T result = caseImpact(impact);
			if (result == null)
				result = caseChainLink(impact);
			if (result == null)
				result = defaultCase(theEObject);
			return result;
		}
		case SagaPackage.CHAIN_LINK: {
			ChainLink chainLink = (ChainLink) theEObject;
			T result = caseChainLink(chainLink);
			if (result == null)
				result = defaultCase(theEObject);
			return result;
		}
		case SagaPackage.WHOLE: {
			Whole whole = (Whole) theEObject;
			T result = caseWhole(whole);
			if (result == null)
				result = caseElementWithSLO(whole);
			if (result == null)
				result = caseNamedElement(whole);
			if (result == null)
				result = defaultCase(theEObject);
			return result;
		}
		case SagaPackage.PART: {
			Part part = (Part) theEObject;
			T result = casePart(part);
			if (result == null)
				result = caseElementWithSLO(part);
			if (result == null)
				result = caseNamedElement(part);
			if (result == null)
				result = defaultCase(theEObject);
			return result;
		}
		case SagaPackage.RESPONSE_TIME_SLO: {
			ResponseTimeSlo responseTimeSlo = (ResponseTimeSlo) theEObject;
			T result = caseResponseTimeSlo(responseTimeSlo);
			if (result == null)
				result = caseSlo(responseTimeSlo);
			if (result == null)
				result = defaultCase(theEObject);
			return result;
		}
		case SagaPackage.AVAILABILITY_SLO: {
			AvailabilitySlo availabilitySlo = (AvailabilitySlo) theEObject;
			T result = caseAvailabilitySlo(availabilitySlo);
			if (result == null)
				result = caseSlo(availabilitySlo);
			if (result == null)
				result = defaultCase(theEObject);
			return result;
		}
		case SagaPackage.NOTIFICATION: {
			Notification notification = (Notification) theEObject;
			T result = caseNotification(notification);
			if (result == null)
				result = defaultCase(theEObject);
			return result;
		}
		case SagaPackage.BPMN_CONNECT: {
			BPMNConnect bpmnConnect = (BPMNConnect) theEObject;
			T result = caseBPMNConnect(bpmnConnect);
			if (result == null)
				result = caseBpmn2_Activity(bpmnConnect);
			if (result == null)
				result = caseFlowNode(bpmnConnect);
			if (result == null)
				result = caseFlowElement(bpmnConnect);
			if (result == null)
				result = caseBaseElement(bpmnConnect);
			if (result == null)
				result = defaultCase(theEObject);
			return result;
		}
		default:
			return defaultCase(theEObject);
		}
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Project</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Project</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseProject(Project object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Component</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Component</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseComponent(Component object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Component Interface</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Component Interface</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseComponentInterface(ComponentInterface object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Named Element</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Named Element</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseNamedElement(NamedElement object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Saga</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Saga</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSaga(Saga object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Step</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Step</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSagaStep(SagaStep object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Process</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Process</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseProcess(de.unistuttgart.ma.saga.Process object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Activity</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Activity</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseActivity(Activity object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Slo</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Slo</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSlo(Slo object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Element With SLO</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Element With SLO</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseElementWithSLO(ElementWithSLO object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Violation</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Violation</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseViolation(Violation object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Impact</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Impact</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseImpact(Impact object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Chain Link</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Chain Link</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseChainLink(ChainLink object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Whole</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Whole</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseWhole(Whole object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Part</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Part</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T casePart(Part object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Response Time Slo</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Response Time Slo</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseResponseTimeSlo(ResponseTimeSlo object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Availability Slo</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Availability Slo</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseAvailabilitySlo(AvailabilitySlo object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Notification</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Notification</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseNotification(Notification object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>BPMN Connect</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>BPMN Connect</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseBPMNConnect(BPMNConnect object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Base Element</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Base Element</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseBaseElement(BaseElement object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Flow Element</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Flow Element</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseFlowElement(FlowElement object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Flow Node</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Flow Node</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseFlowNode(FlowNode object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Activity</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Activity</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseBpmn2_Activity(bpmn2.Activity object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch, but this is the last case anyway.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	@Override
	public T defaultCase(EObject object) {
		return null;
	}

} //SagaSwitch
