/**
 */
package de.unistuttgart.ma.saga.impl;

import de.unistuttgart.ma.saga.ComponentInterface;
import de.unistuttgart.ma.saga.SagaPackage;
import de.unistuttgart.ma.saga.SagaStep;

import java.util.Collection;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.util.EObjectResolvingEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Component Interface</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link de.unistuttgart.ma.saga.impl.ComponentInterfaceImpl#getNextLevelElements <em>Next Level Elements</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ComponentInterfaceImpl extends PartImpl implements ComponentInterface {
	/**
	 * The cached value of the '{@link #getNextLevelElements() <em>Next Level Elements</em>}' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getNextLevelElements()
	 * @generated
	 * @ordered
	 */
	protected EList<SagaStep> nextLevelElements;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComponentInterfaceImpl() {
		super();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	protected EClass eStaticClass() {
		return SagaPackage.Literals.COMPONENT_INTERFACE;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EList<SagaStep> getNextLevelElements() {
		if (nextLevelElements == null) {
			nextLevelElements = new EObjectResolvingEList<SagaStep>(SagaStep.class, this,
					SagaPackage.COMPONENT_INTERFACE__NEXT_LEVEL_ELEMENTS);
		}
		return nextLevelElements;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object eGet(int featureID, boolean resolve, boolean coreType) {
		switch (featureID) {
		case SagaPackage.COMPONENT_INTERFACE__NEXT_LEVEL_ELEMENTS:
			return getNextLevelElements();
		}
		return super.eGet(featureID, resolve, coreType);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@SuppressWarnings("unchecked")
	@Override
	public void eSet(int featureID, Object newValue) {
		switch (featureID) {
		case SagaPackage.COMPONENT_INTERFACE__NEXT_LEVEL_ELEMENTS:
			getNextLevelElements().clear();
			getNextLevelElements().addAll((Collection<? extends SagaStep>) newValue);
			return;
		}
		super.eSet(featureID, newValue);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void eUnset(int featureID) {
		switch (featureID) {
		case SagaPackage.COMPONENT_INTERFACE__NEXT_LEVEL_ELEMENTS:
			getNextLevelElements().clear();
			return;
		}
		super.eUnset(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean eIsSet(int featureID) {
		switch (featureID) {
		case SagaPackage.COMPONENT_INTERFACE__NEXT_LEVEL_ELEMENTS:
			return nextLevelElements != null && !nextLevelElements.isEmpty();
		}
		return super.eIsSet(featureID);
	}

} //ComponentInterfaceImpl
