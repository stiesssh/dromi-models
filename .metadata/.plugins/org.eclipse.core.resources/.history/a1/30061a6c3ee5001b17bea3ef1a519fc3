/**
 */
package de.unistuttgart.ma.saga.impl;

import de.unistuttgart.ma.saga.SagaPackage;
import de.unistuttgart.ma.saga.Slo;
import de.unistuttgart.ma.saga.Statistics;
import de.unistuttgart.ma.saga.Violation;

import java.util.Collection;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectWithInverseResolvingEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Slo</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link de.unistuttgart.ma.saga.impl.SloImpl#getStatostocOperation <em>Statostoc Operation</em>}</li>
 *   <li>{@link de.unistuttgart.ma.saga.impl.SloImpl#getViolatedBy <em>Violated By</em>}</li>
 * </ul>
 *
 * @generated
 */
public class SloImpl extends MinimalEObjectImpl.Container implements Slo {
	/**
	 * The default value of the '{@link #getStatostocOperation() <em>Statostoc Operation</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getStatostocOperation()
	 * @generated
	 * @ordered
	 */
	protected static final Statistics STATOSTOC_OPERATION_EDEFAULT = Statistics.AVG;

	/**
	 * The cached value of the '{@link #getStatostocOperation() <em>Statostoc Operation</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getStatostocOperation()
	 * @generated
	 * @ordered
	 */
	protected Statistics statostocOperation = STATOSTOC_OPERATION_EDEFAULT;

	/**
	 * This is true if the Statostoc Operation attribute has been set.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	protected boolean statostocOperationESet;

	/**
	 * The cached value of the '{@link #getViolatedBy() <em>Violated By</em>}' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getViolatedBy()
	 * @generated
	 * @ordered
	 */
	protected EList<Violation> violatedBy;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SloImpl() {
		super();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	protected EClass eStaticClass() {
		return SagaPackage.Literals.SLO;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Statistics getStatostocOperation() {
		return statostocOperation;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean isSetStatostocOperation() {
		return statostocOperationESet;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EList<Violation> getViolatedBy() {
		if (violatedBy == null) {
			violatedBy = new EObjectWithInverseResolvingEList<Violation>(Violation.class, this,
					SagaPackage.SLO__VIOLATED_BY, SagaPackage.VIOLATION__SLO);
		}
		return violatedBy;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@SuppressWarnings("unchecked")
	@Override
	public NotificationChain eInverseAdd(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
		switch (featureID) {
		case SagaPackage.SLO__VIOLATED_BY:
			return ((InternalEList<InternalEObject>) (InternalEList<?>) getViolatedBy()).basicAdd(otherEnd, msgs);
		}
		return super.eInverseAdd(otherEnd, featureID, msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
		switch (featureID) {
		case SagaPackage.SLO__VIOLATED_BY:
			return ((InternalEList<?>) getViolatedBy()).basicRemove(otherEnd, msgs);
		}
		return super.eInverseRemove(otherEnd, featureID, msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object eGet(int featureID, boolean resolve, boolean coreType) {
		switch (featureID) {
		case SagaPackage.SLO__STATOSTOC_OPERATION:
			return getStatostocOperation();
		case SagaPackage.SLO__VIOLATED_BY:
			return getViolatedBy();
		}
		return super.eGet(featureID, resolve, coreType);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@SuppressWarnings("unchecked")
	@Override
	public void eSet(int featureID, Object newValue) {
		switch (featureID) {
		case SagaPackage.SLO__VIOLATED_BY:
			getViolatedBy().clear();
			getViolatedBy().addAll((Collection<? extends Violation>) newValue);
			return;
		}
		super.eSet(featureID, newValue);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void eUnset(int featureID) {
		switch (featureID) {
		case SagaPackage.SLO__VIOLATED_BY:
			getViolatedBy().clear();
			return;
		}
		super.eUnset(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean eIsSet(int featureID) {
		switch (featureID) {
		case SagaPackage.SLO__STATOSTOC_OPERATION:
			return isSetStatostocOperation();
		case SagaPackage.SLO__VIOLATED_BY:
			return violatedBy != null && !violatedBy.isEmpty();
		}
		return super.eIsSet(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public String toString() {
		if (eIsProxy())
			return super.toString();

		StringBuilder result = new StringBuilder(super.toString());
		result.append(" (statostocOperation: ");
		if (statostocOperationESet)
			result.append(statostocOperation);
		else
			result.append("<unset>");
		result.append(')');
		return result.toString();
	}

} //SloImpl
